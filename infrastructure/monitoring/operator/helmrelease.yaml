apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: '79.1.0'
      sourceRef:
        kind: HelmRepository
        name: prometheus
      interval: 5m
  values: 
    grafana:
      defaultDashboardsTimezone: Asia/Riyadh
      # Use an existing secret for the admin user.
      admin:
        ## Name of the secret. Can be templated.
        existingSecret: "grafana-admin"
        userKey: admin-user
        passwordKey: admin-password
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
          - grafana.almothana.xyz
        tls:
          - secretName: almothana-xyz-tls
            hosts:
            - grafana.almothana.xyz
      persistence:
        enabled: true
        type: sts
        accessModes:
          - ReadWriteOnce
        size: 5Gi
        finalizers:
          - kubernetes.io/pvc-protection
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
          - prometheus.almothana.xyz
        tls:
          - secretName: almothana-xyz-tls
            hosts:
            - prometheus.almothana.xyz
      prometheusSpec:
        # set as false to use the rules in the PrometheusRule resources (https://github.com/onzack/grafana-dashboards/tree/main?tab=readme-ov-file#troubleshooting)
        ruleSelectorNilUsesHelmValues: false
        # testing for CNPG issues: https://github.com/cloudnative-pg/charts/issues/279#issuecomment-2130308807
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        storageSpec: 
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
    alertmanager:
      alertmanagerSpec:
        secrets:
          - slack-secret
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 1Gi
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['namespace']
          group_wait: 2m
          group_interval: 10m
          repeat_interval: 48h
          receiver: 'slack'
          routes:
            - receiver: 'null'
              matchers:
                - alertname = "Watchdog"
            - receiver: 'slack'
              matchers:
                - severity = 'critical'
        receivers:
        - name: "null"
        - name: 'slack'
          slack_configs:
          - api_url_file: /etc/alertmanager/secrets/slack-secret/slack-api-url

